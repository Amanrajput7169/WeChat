{"ast":null,"code":"var _jsxFileName = \"F:\\\\whatsapp clone\\\\client\\\\src\\\\components\\\\chat\\\\Menu\\\\Conversations.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from \"react\";\nimport { getUsers } from \"../../../Service/Api\";\nimport Conversation from \"./Conversation\";\nimport { Box, styled, Divider } from '@mui/material';\nimport { AccountContext } from \"../../../context/AccountProvider\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Component = styled('Box')`\nheight:81vh;\noverflow:overlay;\n`;\n_c = Component;\nconst StyledDivider = styled(Divider)`\nmargin:0 0 0 70px;\nbackground-color:#e9edef;\nopacity:0.6;\n`;\n_c2 = StyledDivider;\nconst Conversations = ({\n  text\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const {\n    account\n  } = useContext(AccountContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      let response = await getUsers();\n      const filteredData = response.filter(user => user.name);\n      setUsers(response);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Component, {\n    children: users.map(user => user.sub !== account.sub && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Conversation, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(StyledDivider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Conversations, \"27AwpUP0BB1ZMydN7czcmfMMyA8=\");\n_c3 = Conversations;\nexport default Conversations;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Component\");\n$RefreshReg$(_c2, \"StyledDivider\");\n$RefreshReg$(_c3, \"Conversations\");","map":{"version":3,"names":["useEffect","useState","useContext","getUsers","Conversation","Box","styled","Divider","AccountContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Component","_c","StyledDivider","_c2","Conversations","text","_s","users","setUsers","account","fetchData","response","filteredData","filter","user","name","children","map","sub","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["F:/whatsapp clone/client/src/components/chat/Menu/Conversations.jsx"],"sourcesContent":["import { useEffect,useState,useContext } from \"react\";\r\nimport { getUsers } from \"../../../Service/Api\";\r\nimport Conversation from \"./Conversation\";\r\nimport {Box,styled,Divider} from '@mui/material';\r\nimport { AccountContext } from \"../../../context/AccountProvider\";\r\n\r\n\r\nconst Component=styled('Box')`\r\nheight:81vh;\r\noverflow:overlay;\r\n`;\r\n\r\nconst StyledDivider=styled(Divider)`\r\nmargin:0 0 0 70px;\r\nbackground-color:#e9edef;\r\nopacity:0.6;\r\n`\r\n\r\nconst Conversations=({text})=>{\r\n\r\n    const[users,setUsers]=useState([]);\r\n\r\n    const{account}=useContext(AccountContext);\r\n\r\n    useEffect(()=>{\r\n        const fetchData=async()=>{\r\n            let response=await getUsers();\r\n            const filteredData=response.filter(user=>user.name)\r\n            setUsers(response);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n    return (\r\n        <Component>\r\n            {\r\n                users.map(user=>(\r\n                    user.sub!==account.sub &&\r\n                    <>\r\n                    <Conversation user={user}/>\r\n                    <StyledDivider/>\r\n                    </>\r\n                ))\r\n            }\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Conversations;"],"mappings":";;AAAA,SAASA,SAAS,EAACC,QAAQ,EAACC,UAAU,QAAQ,OAAO;AACrD,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAAQC,GAAG,EAACC,MAAM,EAACC,OAAO,QAAO,eAAe;AAChD,SAASC,cAAc,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGlE,MAAMC,SAAS,GAACP,MAAM,CAAC,KAAK,CAAC;AAC7B;AACA;AACA,CAAC;AAACQ,EAAA,GAHID,SAAS;AAKf,MAAME,aAAa,GAACT,MAAM,CAACC,OAAO,CAAC;AACnC;AACA;AACA;AACA,CAAC;AAAAS,GAAA,GAJKD,aAAa;AAMnB,MAAME,aAAa,GAACA,CAAC;EAACC;AAAI,CAAC,KAAG;EAAAC,EAAA;EAE1B,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACpB,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAK;IAACqB;EAAO,CAAC,GAACpB,UAAU,CAACM,cAAc,CAAC;EAEzCR,SAAS,CAAC,MAAI;IACV,MAAMuB,SAAS,GAAC,MAAAA,CAAA,KAAS;MACrB,IAAIC,QAAQ,GAAC,MAAMrB,QAAQ,CAAC,CAAC;MAC7B,MAAMsB,YAAY,GAACD,QAAQ,CAACE,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACC,IAAI,CAAC;MACnDP,QAAQ,CAACG,QAAQ,CAAC;IACtB,CAAC;IACDD,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EACN,oBACIb,OAAA,CAACG,SAAS;IAAAgB,QAAA,EAEFT,KAAK,CAACU,GAAG,CAACH,IAAI,IACVA,IAAI,CAACI,GAAG,KAAGT,OAAO,CAACS,GAAG,iBACtBrB,OAAA,CAAAE,SAAA;MAAAiB,QAAA,gBACAnB,OAAA,CAACN,YAAY;QAACuB,IAAI,EAAEA;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3BzB,OAAA,CAACK,aAAa;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA,eACd,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEpB,CAAC;AAAAhB,EAAA,CA3BKF,aAAa;AAAAmB,GAAA,GAAbnB,aAAa;AA6BnB,eAAeA,aAAa;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAArB,GAAA;AAAAqB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}